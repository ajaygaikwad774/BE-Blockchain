{"ast":null,"code":"var _jsxFileName = \"E:\\\\Blockchain\\\\ajay\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport web3 from './web3';\nimport sample from './sample';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      manager: '',\n      value: '',\n      message: '',\n      deploy: '',\n      deployedMesage: ''\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault();\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n      this.setState({\n        message: 'Waiting on transaction success... '\n      });\n      const result = await sample.methods.sendEther().send({\n        from: accounts[0],\n        gas: '1000000',\n        value: web3.utils.toWei(this.state.value, 'ether')\n      });\n      console.log(result);\n      this.setState({\n        message: 'Transaction Succeed'\n      });\n      this.setState({\n        deployedMesage: \"Contract deployed to \"\n      });\n      this.setState({\n        deploy: result.to\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const manager = await sample.methods.manager().call();\n    this.setState({\n      manager\n    });\n    console.log(manager);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"\\xA0 \\xA0   \", React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Smart Contract  \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" Attempting to deploy contract from account \", this.state.manager, \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"A smart contract is a computer protocol intended to digitally facilitate, verify, or enforce the negotiation or performance of a contract. ... \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), \"The aim of smart contracts is to provide security that is superior to traditional contract \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), \"law and to reduce other transaction costs associated with contracting.\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"\\xA0 \\xA0 \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Want to send some ether ? \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \"\\xA0 \\xA0 \", React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" Amount of ether to send\"), \"\\xA0 \\xA0 \", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: event => this.setState({\n        value: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), \"\\xA0 \\xA0 \", React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \" send \")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"  \", this.state.deployedMesage + this.state.deploy, \" \"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:\\Blockchain\\ajay\\src\\App.js"],"names":["React","Component","web3","sample","App","state","manager","value","message","deploy","deployedMesage","onSubmit","event","preventDefault","accounts","eth","getAccounts","console","log","setState","result","methods","sendEther","send","from","gas","utils","toWei","to","componentDidMount","call","render","target"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport web3 from './web3';\nimport sample from './sample';\n\n\nclass App extends Component {\n\n  /*\n  constructor(props){\n     super(props);\n    this.state = {manager: ''};\n  }\n*/\n  state = {\n       manager: '',\n       value: '',\n       message:'',\n       deploy : '',\n       deployedMesage :''\n  };\n \n async componentDidMount(){\n    const manager = await sample.methods.manager().call();\n    this.setState({manager});\n    console.log(manager);\n  }\n\n  onSubmit = async (event) =>{\n        event.preventDefault();\n        const accounts = await web3.eth.getAccounts();\n        console.log(accounts);\n\n        this.setState({message : 'Waiting on transaction success... '});\n\n        const result = await sample.methods.sendEther().send({\n          from: accounts[0],gas:'1000000',\n          value: web3.utils.toWei(this.state.value, 'ether')\n        });\n\n        console.log(result);\n\n        this.setState({message : 'Transaction Succeed'});\n        this.setState({deployedMesage: \"Contract deployed to \"});\n        this.setState({deploy : result.to});\n         \n  }\n\n\n  render(){\n    return(\n      <div className=\"container\" >\n      &nbsp; &nbsp;   <h1>Smart Contract  </h1>\n      <p> Attempting to deploy contract from account {this.state.manager} </p>\n      <p>A smart contract is a computer protocol intended to digitally facilitate,\n         verify, or enforce the negotiation or performance of a contract. ... <br/>\n          The aim of smart contracts is to provide security that is superior to traditional contract <br/>\n           law and to reduce other transaction costs associated with contracting.</p>\n         <hr/>\n          \n         <form onSubmit={this.onSubmit}>\n         &nbsp; &nbsp; <b>Want to send some ether ? </b> <br></br>\n         &nbsp; &nbsp; <label> Amount of ether to send</label>\n         &nbsp; &nbsp; <input type=\"text\" value={this.state.value} onChange={event => this.setState({ value: event.target.value })} /> <br/>\n         &nbsp; &nbsp; <button > send </button>\n         </form>\n         <hr/>\n\n         <h1>{this.state.message}</h1>\n         <p>  {this.state.deployedMesage + this.state.deploy} </p>\n      </div>\n\n    );\n  }\n\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}