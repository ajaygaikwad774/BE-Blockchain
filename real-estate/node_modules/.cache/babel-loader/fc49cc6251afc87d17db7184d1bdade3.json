{"ast":null,"code":"var bip39 = require(\"bip39\");\n\nvar hdkey = require('ethereumjs-wallet/hdkey');\n\nvar ProviderEngine = require(\"web3-provider-engine\");\n\nvar FiltersSubprovider = require('web3-provider-engine/subproviders/filters.js');\n\nvar WalletSubprovider = require('web3-provider-engine/subproviders/wallet.js');\n\nvar Web3Subprovider = require(\"web3-provider-engine/subproviders/web3.js\");\n\nvar Web3 = require(\"web3\");\n\nfunction HDWalletProvider(mnemonic, provider_url, address_index) {\n  this.mnemonic = mnemonic;\n  this.hdwallet = hdkey.fromMasterSeed(bip39.mnemonicToSeed(mnemonic));\n\n  if (address_index == null) {\n    address_index = 0;\n  }\n\n  this.wallet_hdpath = \"m/44'/60'/0'/0/\";\n  this.wallet = this.hdwallet.derivePath(this.wallet_hdpath + address_index).getWallet();\n  this.address = \"0x\" + this.wallet.getAddress().toString(\"hex\");\n  this.engine = new ProviderEngine();\n  this.engine.addProvider(new WalletSubprovider(this.wallet, {}));\n  this.engine.addProvider(new FiltersSubprovider());\n  this.engine.addProvider(new Web3Subprovider(new Web3.providers.HttpProvider(provider_url)));\n  this.engine.start(); // Required by the provider engine.\n}\n\n;\n\nHDWalletProvider.prototype.sendAsync = function () {\n  this.engine.sendAsync.apply(this.engine, arguments);\n};\n\nHDWalletProvider.prototype.send = function () {\n  return this.engine.send.apply(this.engine, arguments);\n};\n\nHDWalletProvider.prototype.getAddress = function () {\n  return this.address;\n};\n\nmodule.exports = HDWalletProvider;","map":null,"metadata":{},"sourceType":"script"}